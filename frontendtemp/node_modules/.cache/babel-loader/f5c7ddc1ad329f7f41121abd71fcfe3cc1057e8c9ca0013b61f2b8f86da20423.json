{"ast":null,"code":"var _jsxFileName = \"/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { GoogleMap, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  onLocationSelect\n}) => {\n  _s();\n  const mapRef = useRef(null);\n\n  // State to hold the marker's position\n  const [markerPosition, setMarkerPosition] = useState(null);\n\n  // Set the initial center of the map\n  const center = {\n    lat: -3.745,\n    lng: -38.523\n  }; // Adjust to your preferred center location\n\n  // Handle the click event on the map to get the selected location\n  const handleMapClick = event => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n\n    // Update the marker position\n    setMarkerPosition({\n      lat,\n      lng\n    });\n\n    // Call the function with selected coordinates\n    onLocationSelect({\n      lat,\n      lng\n    });\n  };\n  useEffect(() => {\n    // Any additional effects can go here\n  }, [onLocationSelect]);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    id: \"map\",\n    mapContainerStyle: {\n      height: '400px',\n      width: '800px'\n    }\n    //lcenter={center}\n    ,\n    zoom: 10,\n    onClick: handleMapClick // Set up the click event handler\n    ,\n    onLoad: map => mapRef.current = map // Store the map instance if needed\n    ,\n    children: markerPosition && /*#__PURE__*/_jsxDEV(Marker, {\n      position: markerPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n};\n_s(MapComponent, \"+bl+ou/1YdqgDj3bGLKOGhiPVv4=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","GoogleMap","Marker","jsxDEV","_jsxDEV","MapComponent","onLocationSelect","_s","mapRef","markerPosition","setMarkerPosition","center","lat","lng","handleMapClick","event","latLng","id","mapContainerStyle","height","width","zoom","onClick","onLoad","map","current","children","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/MapComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { GoogleMap, Marker } from '@react-google-maps/api';\n\nconst MapComponent = ({ onLocationSelect }) => {\n    const mapRef = useRef(null);\n\n    // State to hold the marker's position\n    const [markerPosition, setMarkerPosition] = useState(null);\n\n    // Set the initial center of the map\n    const center = { lat: -3.745, lng: -38.523 }; // Adjust to your preferred center location\n\n    // Handle the click event on the map to get the selected location\n    const handleMapClick = (event) => {\n        const lat = event.latLng.lat();\n        const lng = event.latLng.lng();\n        \n        // Update the marker position\n        setMarkerPosition({ lat, lng });\n        \n        // Call the function with selected coordinates\n        onLocationSelect({ lat, lng });\n    };\n\n    useEffect(() => {\n        // Any additional effects can go here\n    }, [onLocationSelect]);\n\n    return (\n            <GoogleMap\n                id=\"map\"\n                mapContainerStyle={{ height: '400px', width: '800px' }}\n                //lcenter={center}\n                zoom={10}\n                onClick={handleMapClick} // Set up the click event handler\n                onLoad={map => (mapRef.current = map)} // Store the map instance if needed\n            >\n                {/* Render the marker if markerPosition is set */}\n                {markerPosition && (\n                    <Marker position={markerPosition} />\n                )}\n            </GoogleMap>\n    );\n};\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,MAAM,GAAGT,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACA,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMW,MAAM,GAAG;IAAEC,GAAG,EAAE,CAAC,KAAK;IAAEC,GAAG,EAAE,CAAC;EAAO,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAC9B,MAAMH,GAAG,GAAGG,KAAK,CAACC,MAAM,CAACJ,GAAG,CAAC,CAAC;IAC9B,MAAMC,GAAG,GAAGE,KAAK,CAACC,MAAM,CAACH,GAAG,CAAC,CAAC;;IAE9B;IACAH,iBAAiB,CAAC;MAAEE,GAAG;MAAEC;IAAI,CAAC,CAAC;;IAE/B;IACAP,gBAAgB,CAAC;MAAEM,GAAG;MAAEC;IAAI,CAAC,CAAC;EAClC,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZ;EAAA,CACH,EAAE,CAACQ,gBAAgB,CAAC,CAAC;EAEtB,oBACQF,OAAA,CAACH,SAAS;IACNgB,EAAE,EAAC,KAAK;IACRC,iBAAiB,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ;IACrD;IAAA;IACAC,IAAI,EAAE,EAAG;IACTC,OAAO,EAAER,cAAe,CAAC;IAAA;IACzBS,MAAM,EAAEC,GAAG,IAAKhB,MAAM,CAACiB,OAAO,GAAGD,GAAK,CAAC;IAAA;IAAAE,QAAA,EAGtCjB,cAAc,iBACXL,OAAA,CAACF,MAAM;MAACyB,QAAQ,EAAElB;IAAe;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACtC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAExB,CAAC;AAACxB,EAAA,CAxCIF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}