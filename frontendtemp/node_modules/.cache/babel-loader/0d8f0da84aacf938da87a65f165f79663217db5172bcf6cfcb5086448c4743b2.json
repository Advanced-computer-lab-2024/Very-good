{"ast":null,"code":"var _jsxFileName = \"/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  onLocationSelect\n}) => {\n  _s();\n  const [apiLoaded, setApiLoaded] = useState(false);\n  useEffect(() => {\n    if (window.google && window.google.maps) {\n      setApiLoaded(true); // Google Maps API already loaded\n    }\n  }, []);\n  const center = {\n    lat: 30.040928700492838,\n    lng: 31.475132598643228\n  };\n  const handleMapClick = event => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    onLocationSelect({\n      lat,\n      lng\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!apiLoaded && /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\",\n      async: true,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        id: \"map\",\n        mapContainerStyle: {\n          height: '400px',\n          width: '800px'\n        },\n        center: center,\n        zoom: 10,\n        onClick: handleMapClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), apiLoaded && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      id: \"map\",\n      mapContainerStyle: {\n        height: '400px',\n        width: '800px'\n      },\n      center: center,\n      zoom: 10,\n      onClick: handleMapClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(MapComponent, \"zV7K1KcnjvJVKtGxrNrUy09UrY4=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","jsxDEV","_jsxDEV","Fragment","_Fragment","MapComponent","onLocationSelect","_s","apiLoaded","setApiLoaded","window","google","maps","center","lat","lng","handleMapClick","event","latLng","children","googleMapsApiKey","async","id","mapContainerStyle","height","width","zoom","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\n\nconst MapComponent = ({ onLocationSelect }) => {\n    const [apiLoaded, setApiLoaded] = useState(false);\n\n    useEffect(() => {\n        if (window.google && window.google.maps) {\n            setApiLoaded(true); // Google Maps API already loaded\n        }\n    }, []);\n\n    const center = { lat: 30.040928700492838, lng: 31.475132598643228 };\n\n    const handleMapClick = (event) => {\n        const lat = event.latLng.lat();\n        const lng = event.latLng.lng();\n        onLocationSelect({ lat, lng });\n    };\n\n    return (\n        <>\n            {!apiLoaded && (\n                <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" async>\n                    <GoogleMap\n                        id=\"map\"\n                        mapContainerStyle={{ height: '400px', width: '800px' }}\n                        center={center}\n                        zoom={10}\n                        onClick={handleMapClick}\n                    />\n                </LoadScript>\n            )}\n\n            {apiLoaded && (\n                <GoogleMap\n                    id=\"map\"\n                    mapContainerStyle={{ height: '400px', width: '800px' }}\n                    center={center}\n                    zoom={10}\n                    onClick={handleMapClick}\n                />\n            )}\n        </>\n    );\n};\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/D,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACZ,IAAIY,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE;MACrCH,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,MAAM,GAAG;IAAEC,GAAG,EAAE,kBAAkB;IAAEC,GAAG,EAAE;EAAmB,CAAC;EAEnE,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAC9B,MAAMH,GAAG,GAAGG,KAAK,CAACC,MAAM,CAACJ,GAAG,CAAC,CAAC;IAC9B,MAAMC,GAAG,GAAGE,KAAK,CAACC,MAAM,CAACH,GAAG,CAAC,CAAC;IAC9BT,gBAAgB,CAAC;MAAEQ,GAAG;MAAEC;IAAI,CAAC,CAAC;EAClC,CAAC;EAED,oBACIb,OAAA,CAAAE,SAAA;IAAAe,QAAA,GACK,CAACX,SAAS,iBACPN,OAAA,CAACF,UAAU;MAACoB,gBAAgB,EAAC,0BAA0B;MAACC,KAAK;MAAAF,QAAA,eACzDjB,OAAA,CAACH,SAAS;QACNuB,EAAE,EAAC,KAAK;QACRC,iBAAiB,EAAE;UAAEC,MAAM,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAQ,CAAE;QACvDZ,MAAM,EAAEA,MAAO;QACfa,IAAI,EAAE,EAAG;QACTC,OAAO,EAAEX;MAAe;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CACf,EAEAvB,SAAS,iBACNN,OAAA,CAACH,SAAS;MACNuB,EAAE,EAAC,KAAK;MACRC,iBAAiB,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAE;MACvDZ,MAAM,EAAEA,MAAO;MACfa,IAAI,EAAE,EAAG;MACTC,OAAO,EAAEX;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACJ;EAAA,eACH,CAAC;AAEX,CAAC;AAACxB,EAAA,CA1CIF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}