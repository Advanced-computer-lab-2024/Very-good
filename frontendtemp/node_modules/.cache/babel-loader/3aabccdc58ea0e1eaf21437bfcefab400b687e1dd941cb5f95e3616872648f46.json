{"ast":null,"code":"var _jsxFileName = \"/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { GoogleMap, Marker, LoadScript } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  onLocationSelect\n}) => {\n  _s();\n  const mapRef = useRef(null);\n\n  // State to hold the marker's position\n  const [markerPosition, setMarkerPosition] = useState(null);\n\n  // Set the initial center of the map\n  const initialCenter = {\n    lat: 30.745,\n    lng: 30.523\n  }; // Adjust to your preferred center location\n\n  // Handle the click event on the map to get the selected location\n  const handleMapClick = event => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n\n    // Update the marker position\n    setMarkerPosition({\n      lat,\n      lng\n    });\n\n    // Call the function with selected coordinates\n    onLocationSelect({\n      lat,\n      lng\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAbrhlteb_a1DkS0Jp1tU9fLD5Hi-j2CrA\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      id: \"map\",\n      mapContainerStyle: {\n        height: '400px',\n        width: '800px'\n      },\n      center: initialCenter // Use initialCenter here\n      ,\n      zoom: 10,\n      onClick: handleMapClick // Set up the click event handler\n      ,\n      onLoad: map => mapRef.current = map // Store the map instance if needed\n      ,\n      children: markerPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(MapComponent, \"1QoKr0K3FbguX+JiF3R7MChLGNQ=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","GoogleMap","Marker","LoadScript","jsxDEV","_jsxDEV","MapComponent","onLocationSelect","_s","mapRef","markerPosition","setMarkerPosition","initialCenter","lat","lng","handleMapClick","event","latLng","googleMapsApiKey","children","id","mapContainerStyle","height","width","center","zoom","onClick","onLoad","map","current","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/MapComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { GoogleMap, Marker, LoadScript } from '@react-google-maps/api';\n\nconst MapComponent = ({ onLocationSelect }) => {\n    const mapRef = useRef(null);\n\n    // State to hold the marker's position\n    const [markerPosition, setMarkerPosition] = useState(null);\n    \n    // Set the initial center of the map\n    const initialCenter = { lat: 30.745, lng: 30.523 }; // Adjust to your preferred center location\n\n    // Handle the click event on the map to get the selected location\n    const handleMapClick = (event) => {\n        const lat = event.latLng.lat();\n        const lng = event.latLng.lng();\n        \n        // Update the marker position\n        setMarkerPosition({ lat, lng });\n        \n        // Call the function with selected coordinates\n        onLocationSelect({ lat, lng });\n    };\n\n    return (\n        <LoadScript googleMapsApiKey=\"AIzaSyAbrhlteb_a1DkS0Jp1tU9fLD5Hi-j2CrA\">\n            <GoogleMap\n                id=\"map\"\n                mapContainerStyle={{ height: '400px', width: '800px' }}\n                center={initialCenter} // Use initialCenter here\n                zoom={10}\n                onClick={handleMapClick} // Set up the click event handler\n                onLoad={map => (mapRef.current = map)} // Store the map instance if needed\n            >\n                {/* Render the marker if markerPosition is set */}\n                {markerPosition && (\n                    <Marker position={markerPosition} />\n                )}\n            </GoogleMap>\n        </LoadScript>\n    );\n};\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,MAAM,GAAGV,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACA,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMY,aAAa,GAAG;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAO,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAC9B,MAAMH,GAAG,GAAGG,KAAK,CAACC,MAAM,CAACJ,GAAG,CAAC,CAAC;IAC9B,MAAMC,GAAG,GAAGE,KAAK,CAACC,MAAM,CAACH,GAAG,CAAC,CAAC;;IAE9B;IACAH,iBAAiB,CAAC;MAAEE,GAAG;MAAEC;IAAI,CAAC,CAAC;;IAE/B;IACAP,gBAAgB,CAAC;MAAEM,GAAG;MAAEC;IAAI,CAAC,CAAC;EAClC,CAAC;EAED,oBACIT,OAAA,CAACF,UAAU;IAACe,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,eAClEd,OAAA,CAACJ,SAAS;MACNmB,EAAE,EAAC,KAAK;MACRC,iBAAiB,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAE;MACvDC,MAAM,EAAEZ,aAAc,CAAC;MAAA;MACvBa,IAAI,EAAE,EAAG;MACTC,OAAO,EAAEX,cAAe,CAAC;MAAA;MACzBY,MAAM,EAAEC,GAAG,IAAKnB,MAAM,CAACoB,OAAO,GAAGD,GAAK,CAAC;MAAA;MAAAT,QAAA,EAGtCT,cAAc,iBACXL,OAAA,CAACH,MAAM;QAAC4B,QAAQ,EAAEpB;MAAe;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACtC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAErB,CAAC;AAAC1B,EAAA,CAtCIF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}