{"ast":null,"code":"var _jsxFileName = \"/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/ItineraryList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ItineraryDisplay from './ItineraryDisplay'; // Assume this is your Itinerary display component\nimport { fetchItineraries, deleteItinerary, updateItinerary } from '../Services/itineraryServices'; // Adjust the import path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItineraryList = ({\n  tourGuideId\n}) => {\n  _s();\n  const [itineraries, setItineraries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getItineraries = async () => {\n      try {\n        console.log('Tour Guide ID:', tourGuideId);\n        const data = await fetchItineraries(tourGuideId);\n        setItineraries(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getItineraries();\n  }, [tourGuideId]);\n  const handleDeleteItinerary = async itineraryId => {\n    try {\n      await deleteItinerary(itineraryId); // Call the delete function from services\n      setItineraries(itineraries.filter(itinerary => itinerary._id !== itineraryId)); // Update the state\n    } catch (err) {\n      console.error('Failed to delete itinerary:', err.message);\n    }\n  };\n  const handleUpdateItinerary = async (itineraryId, updatedData) => {\n    try {\n      const updatedItinerary = await updateItinerary(itineraryId, updatedData); // Call the update function from services\n      setItineraries(prevItineraries => prevItineraries.map(itinerary => itinerary._id === updatedItinerary._id ? updatedItinerary : itinerary)); // Update the state with the new data\n      return updatedItinerary;\n    } catch (err) {\n      console.error('Failed to update itinerary:', err.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading itineraries...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Itineraries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), itineraries.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No itineraries found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : itineraries.map(itinerary => /*#__PURE__*/_jsxDEV(ItineraryDisplay, {\n      itinerary: itinerary,\n      onDelete: handleDeleteItinerary,\n      onUpdate: handleUpdateItinerary\n    }, itinerary._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(ItineraryList, \"4gQeUo9vd30LrDPPf5Y33kQD/HM=\");\n_c = ItineraryList;\nexport default ItineraryList;\nvar _c;\n$RefreshReg$(_c, \"ItineraryList\");","map":{"version":3,"names":["React","useEffect","useState","ItineraryDisplay","fetchItineraries","deleteItinerary","updateItinerary","jsxDEV","_jsxDEV","ItineraryList","tourGuideId","_s","itineraries","setItineraries","loading","setLoading","error","setError","getItineraries","console","log","data","err","message","handleDeleteItinerary","itineraryId","filter","itinerary","_id","handleUpdateItinerary","updatedData","updatedItinerary","prevItineraries","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","onDelete","onUpdate","_c","$RefreshReg$"],"sources":["/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/ItineraryList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ItineraryDisplay from './ItineraryDisplay'; // Assume this is your Itinerary display component\nimport { fetchItineraries, deleteItinerary, updateItinerary } from '../Services/itineraryServices'; // Adjust the import path as needed\n\nconst ItineraryList = ({ tourGuideId }) => {\n    const [itineraries, setItineraries] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getItineraries = async () => {\n            try {\n                console.log('Tour Guide ID:', tourGuideId);\n                const data = await fetchItineraries(tourGuideId);\n                setItineraries(data);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        getItineraries();\n    }, [tourGuideId]);\n\n    const handleDeleteItinerary = async (itineraryId) => {\n        try {\n            await deleteItinerary(itineraryId); // Call the delete function from services\n            setItineraries(itineraries.filter(itinerary => itinerary._id !== itineraryId)); // Update the state\n        } catch (err) {\n            console.error('Failed to delete itinerary:', err.message);\n        }\n    };\n\n    const handleUpdateItinerary = async (itineraryId, updatedData) => {\n        try {\n            const updatedItinerary = await updateItinerary(itineraryId, updatedData); // Call the update function from services\n            setItineraries(prevItineraries => \n                prevItineraries.map(itinerary => \n                    itinerary._id === updatedItinerary._id ? updatedItinerary : itinerary\n                )\n            ); // Update the state with the new data\n            return updatedItinerary;\n        } catch (err) {\n            console.error('Failed to update itinerary:', err.message);\n        }\n    };\n\n    if (loading) return <p>Loading itineraries...</p>;\n    if (error) return <p>Error: {error}</p>;\n\n    return (\n        <div className=\"container\">\n            <h1>Itineraries</h1>\n            {itineraries.length === 0 ? (\n                <p>No itineraries found.</p>\n            ) : (\n                itineraries.map((itinerary) => (\n                    <ItineraryDisplay \n                        key={itinerary._id} \n                        itinerary={itinerary} \n                        onDelete={handleDeleteItinerary} \n                        onUpdate={handleUpdateItinerary} \n                    />\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default ItineraryList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}