{"ast":null,"code":"var _jsxFileName = \"/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  onLocationSelect\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null); // State to hold the marker\n\n  useEffect(() => {\n    const loadMap = () => {\n      const google = window.google;\n      const initialLocation = {\n        lat: -34.397,\n        lng: 150.644\n      }; // Default coordinates\n\n      // Initialize the map\n      const mapInstance = new google.maps.Map(mapRef.current, {\n        center: initialLocation,\n        zoom: 8\n      });\n\n      // Listen for map clicks\n      mapInstance.addListener('click', event => {\n        const lat = event.latLng.lat();\n        const lng = event.latLng.lng();\n        const location = {\n          lat,\n          lng\n        };\n\n        // Place or move the marker\n        if (marker) {\n          marker.setPosition(location);\n        } else {\n          const newMarker = new google.maps.Marker({\n            position: location,\n            map: mapInstance\n          });\n          setMarker(newMarker); // Store the marker in state\n        }\n\n        // Pass the location to the parent component\n        onLocationSelect(location);\n      });\n      setMap(mapInstance);\n    };\n    loadMap();\n  }, [marker, onLocationSelect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      height: '400px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"p9IAaHvVzU7Dt3IyPXE7ez/5dTc=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","MapComponent","onLocationSelect","_s","mapRef","map","setMap","marker","setMarker","loadMap","google","window","initialLocation","lat","lng","mapInstance","maps","Map","current","center","zoom","addListener","event","latLng","location","setPosition","newMarker","Marker","position","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/MapComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst MapComponent = ({ onLocationSelect }) => {\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null); // State to hold the marker\n\n  useEffect(() => {\n    const loadMap = () => {\n      const google = window.google;\n      const initialLocation = { lat: -34.397, lng: 150.644 }; // Default coordinates\n\n      // Initialize the map\n      const mapInstance = new google.maps.Map(mapRef.current, {\n        center: initialLocation,\n        zoom: 8,\n      });\n\n      // Listen for map clicks\n      mapInstance.addListener('click', (event) => {\n        const lat = event.latLng.lat();\n        const lng = event.latLng.lng();\n        const location = { lat, lng };\n\n        // Place or move the marker\n        if (marker) {\n          marker.setPosition(location);\n        } else {\n          const newMarker = new google.maps.Marker({\n            position: location,\n            map: mapInstance,\n          });\n          setMarker(newMarker); // Store the marker in state\n        }\n\n        // Pass the location to the parent component\n        onLocationSelect(location);\n      });\n\n      setMap(mapInstance);\n    };\n\n    loadMap();\n  }, [marker, onLocationSelect]);\n\n  return <div ref={mapRef} style={{ height: '400px', width: '100%' }} />;\n};\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5CF,SAAS,CAAC,MAAM;IACd,MAAMa,OAAO,GAAGA,CAAA,KAAM;MACpB,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAM;MAC5B,MAAME,eAAe,GAAG;QAAEC,GAAG,EAAE,CAAC,MAAM;QAAEC,GAAG,EAAE;MAAQ,CAAC,CAAC,CAAC;;MAExD;MACA,MAAMC,WAAW,GAAG,IAAIL,MAAM,CAACM,IAAI,CAACC,GAAG,CAACb,MAAM,CAACc,OAAO,EAAE;QACtDC,MAAM,EAAEP,eAAe;QACvBQ,IAAI,EAAE;MACR,CAAC,CAAC;;MAEF;MACAL,WAAW,CAACM,WAAW,CAAC,OAAO,EAAGC,KAAK,IAAK;QAC1C,MAAMT,GAAG,GAAGS,KAAK,CAACC,MAAM,CAACV,GAAG,CAAC,CAAC;QAC9B,MAAMC,GAAG,GAAGQ,KAAK,CAACC,MAAM,CAACT,GAAG,CAAC,CAAC;QAC9B,MAAMU,QAAQ,GAAG;UAAEX,GAAG;UAAEC;QAAI,CAAC;;QAE7B;QACA,IAAIP,MAAM,EAAE;UACVA,MAAM,CAACkB,WAAW,CAACD,QAAQ,CAAC;QAC9B,CAAC,MAAM;UACL,MAAME,SAAS,GAAG,IAAIhB,MAAM,CAACM,IAAI,CAACW,MAAM,CAAC;YACvCC,QAAQ,EAAEJ,QAAQ;YAClBnB,GAAG,EAAEU;UACP,CAAC,CAAC;UACFP,SAAS,CAACkB,SAAS,CAAC,CAAC,CAAC;QACxB;;QAEA;QACAxB,gBAAgB,CAACsB,QAAQ,CAAC;MAC5B,CAAC,CAAC;MAEFlB,MAAM,CAACS,WAAW,CAAC;IACrB,CAAC;IAEDN,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACF,MAAM,EAAEL,gBAAgB,CAAC,CAAC;EAE9B,oBAAOF,OAAA;IAAK6B,GAAG,EAAEzB,MAAO;IAAC0B,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxE,CAAC;AAACjC,EAAA,CA5CIF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}