{"ast":null,"code":"var _jsxFileName = \"/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/MusuemList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MuseumDisplay from './MuseumDisplay';\nimport { fetchMuseums, deleteMuseum, updateMuseum } from '../Services/museumServices'; // Adjust the import path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MuseumList = () => {\n  _s();\n  const [museums, setMuseums] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getMuseums = async () => {\n      try {\n        const data = await fetchMuseums(); // Fetch all museums\n        setMuseums(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMuseums();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  const handleDeleteMuseum = async museumId => {\n    try {\n      await deleteMuseum(museumId); // Call the delete function from services\n      setMuseums(museums.filter(museum => museum._id !== museumId)); // Update the state\n    } catch (err) {\n      console.error('Failed to delete museum:', err.message);\n    }\n  };\n  const handleUpdateMuseum = async (museumId, updatedData) => {\n    try {\n      const updatedMuseum = await updateMuseum(museumId, updatedData); // Call the update function from services\n      setMuseums(prevMuseums => prevMuseums.map(museum => museum._id === updatedMuseum._id ? updatedMuseum : museum)); // Update the state with the new data\n      return updatedMuseum;\n    } catch (err) {\n      console.error('Failed to update museum:', err.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading museums...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error occurred: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Museums\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), museums.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No museums found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : museums.map(museum => /*#__PURE__*/_jsxDEV(MuseumDisplay, {\n      museum: museum,\n      onDelete: handleDeleteMuseum,\n      onUpdate: handleUpdateMuseum\n    }, museum._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(MuseumList, \"bfOoI3NKqY6/HwkkQHEpwZ1y+aQ=\");\n_c = MuseumList;\nexport default MuseumList;\nvar _c;\n$RefreshReg$(_c, \"MuseumList\");","map":{"version":3,"names":["React","useEffect","useState","MuseumDisplay","fetchMuseums","deleteMuseum","updateMuseum","jsxDEV","_jsxDEV","MuseumList","_s","museums","setMuseums","loading","setLoading","error","setError","getMuseums","data","err","message","handleDeleteMuseum","museumId","filter","museum","_id","console","handleUpdateMuseum","updatedData","updatedMuseum","prevMuseums","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","onDelete","onUpdate","_c","$RefreshReg$"],"sources":["/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/MusuemList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MuseumDisplay from './MuseumDisplay';\nimport { fetchMuseums, deleteMuseum, updateMuseum } from '../Services/museumServices'; // Adjust the import path as needed\n\nconst MuseumList = () => {\n    const [museums, setMuseums] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getMuseums = async () => {\n            try {\n                const data = await fetchMuseums(); // Fetch all museums\n                setMuseums(data);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        getMuseums();\n    }, []); // Empty dependency array means this effect runs once on mount\n\n    const handleDeleteMuseum = async (museumId) => {\n        try {\n            await deleteMuseum(museumId); // Call the delete function from services\n            setMuseums(museums.filter(museum => museum._id !== museumId)); // Update the state\n        } catch (err) {\n            console.error('Failed to delete museum:', err.message);\n        }\n    };\n\n    const handleUpdateMuseum = async (museumId, updatedData) => {\n        try {\n            const updatedMuseum = await updateMuseum(museumId, updatedData); // Call the update function from services\n            setMuseums(prevMuseums => \n                prevMuseums.map(museum => \n                    museum._id === updatedMuseum._id ? updatedMuseum : museum\n                )\n            ); // Update the state with the new data\n            return updatedMuseum;\n        } catch (err) {\n            console.error('Failed to update museum:', err.message);\n        }\n    };\n\n    if (loading) return <p>Loading museums...</p>;\n    if (error) return <p>Error occurred: {error}</p>;\n\n    return (\n        <div className=\"container\">\n            <h1>Museums</h1>\n            {museums.length === 0 ? (\n                <p>No museums found.</p>\n            ) : (\n                museums.map((museum) => (\n                    <MuseumDisplay key={museum._id} museum={museum} onDelete={handleDeleteMuseum} onUpdate={handleUpdateMuseum} />\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default MuseumList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}