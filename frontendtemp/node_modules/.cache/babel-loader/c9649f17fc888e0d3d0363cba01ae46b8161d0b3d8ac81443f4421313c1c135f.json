{"ast":null,"code":"import axios from 'axios';\nexport const fetchActivities = async advertiserId => {\n  const url = `http://localhost:4000/api/advertisers/${advertiserId}/activities`;\n  const response = await axios.get(url);\n  return response.data;\n};\nexport const fetchActivitiesDate = async () => {\n  const url = `http://localhost:4000/api/activities/`;\n  const currentDate = new Date();\n\n  // Prepare parameters\n  const params = {\n    date: currentDate\n  }; // Automatically set the current date\n\n  // Make the API call with current date as filter\n  const response = await axios.get(url, {\n    params\n  });\n  return response.data; // Return the data\n};\nexport const deleteActivity = async activityId => {\n  const url = `http://localhost:4000/api/advertisers/${activityId}/activities`;\n  await axios.delete(url);\n};\nexport const updateActivity = async (activityId, updatedActivity) => {\n  const url = `http://localhost:4000/api/advertisers/${activityId}/activities`;\n  const response = await axios.put(url, updatedActivity); // Assuming your backend uses PUT for updates\n  return response.data;\n};\nexport const createActivity = async newActivity => {\n  const url = `http://localhost:4000/api/activities/`;\n  const response = await axios.post(url, newActivity);\n  return response.data;\n};\nexport const fetchCategories = async () => {\n  const url = `http://localhost:4000/api/categories/`;\n  const response = await axios.get(url);\n  return response.data.data;\n};\nexport const fetchCategoryById = async categoryId => {\n  const url = `http://localhost:4000/api/categories/${categoryId}`;\n  const response = await axios.get(url);\n  return response.data;\n};","map":{"version":3,"names":["axios","fetchActivities","advertiserId","url","response","get","data","fetchActivitiesDate","currentDate","Date","params","date","deleteActivity","activityId","delete","updateActivity","updatedActivity","put","createActivity","newActivity","post","fetchCategories","fetchCategoryById","categoryId"],"sources":["/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Services/activityServices.js"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchActivities = async (advertiserId) => {\n    const url = `http://localhost:4000/api/advertisers/${advertiserId}/activities`; \n    const response = await axios.get(url);\n    return response.data;\n};\n\n\nexport const fetchActivitiesDate = async () => {\n    const url = `http://localhost:4000/api/activities/`;\n\n    \n    const currentDate = new Date();\n\n    // Prepare parameters\n    const params = { date: currentDate }; // Automatically set the current date\n\n    // Make the API call with current date as filter\n    const response = await axios.get(url, { params });\n\n    return response.data; // Return the data\n};\n\n\nexport const deleteActivity = async (activityId) => {\n    const url = `http://localhost:4000/api/advertisers/${activityId}/activities`;\n    await axios.delete(url);\n};\n\nexport const updateActivity = async (activityId, updatedActivity) => {\n    const url = `http://localhost:4000/api/advertisers/${activityId}/activities`;\n    const response = await axios.put(url, updatedActivity); // Assuming your backend uses PUT for updates\n    return response.data;\n};\n\nexport const createActivity = async (newActivity) => {\n    const url = `http://localhost:4000/api/activities/`;\n    const response = await axios.post(url, newActivity);\n    return response.data;\n};\n\nexport const fetchCategories = async() => {\n    const url = `http://localhost:4000/api/categories/`;\n    const response = await axios.get(url);\n    return response.data.data;\n}\n\nexport const fetchCategoryById = async(categoryId) => {\n    const url = `http://localhost:4000/api/categories/${categoryId}`;\n    const response = await axios.get(url);\n    return response.data;\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG,MAAOC,YAAY,IAAK;EACnD,MAAMC,GAAG,GAAG,yCAAyCD,YAAY,aAAa;EAC9E,MAAME,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACF,GAAG,CAAC;EACrC,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC;AAGD,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMJ,GAAG,GAAG,uCAAuC;EAGnD,MAAMK,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;;EAE9B;EACA,MAAMC,MAAM,GAAG;IAAEC,IAAI,EAAEH;EAAY,CAAC,CAAC,CAAC;;EAEtC;EACA,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACF,GAAG,EAAE;IAAEO;EAAO,CAAC,CAAC;EAEjD,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC1B,CAAC;AAGD,OAAO,MAAMM,cAAc,GAAG,MAAOC,UAAU,IAAK;EAChD,MAAMV,GAAG,GAAG,yCAAyCU,UAAU,aAAa;EAC5E,MAAMb,KAAK,CAACc,MAAM,CAACX,GAAG,CAAC;AAC3B,CAAC;AAED,OAAO,MAAMY,cAAc,GAAG,MAAAA,CAAOF,UAAU,EAAEG,eAAe,KAAK;EACjE,MAAMb,GAAG,GAAG,yCAAyCU,UAAU,aAAa;EAC5E,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACiB,GAAG,CAACd,GAAG,EAAEa,eAAe,CAAC,CAAC,CAAC;EACxD,OAAOZ,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMY,cAAc,GAAG,MAAOC,WAAW,IAAK;EACjD,MAAMhB,GAAG,GAAG,uCAAuC;EACnD,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACoB,IAAI,CAACjB,GAAG,EAAEgB,WAAW,CAAC;EACnD,OAAOf,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMe,eAAe,GAAG,MAAAA,CAAA,KAAW;EACtC,MAAMlB,GAAG,GAAG,uCAAuC;EACnD,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACF,GAAG,CAAC;EACrC,OAAOC,QAAQ,CAACE,IAAI,CAACA,IAAI;AAC7B,CAAC;AAED,OAAO,MAAMgB,iBAAiB,GAAG,MAAMC,UAAU,IAAK;EAClD,MAAMpB,GAAG,GAAG,wCAAwCoB,UAAU,EAAE;EAChE,MAAMnB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACF,GAAG,CAAC;EACrC,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}