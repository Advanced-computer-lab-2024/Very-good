{"ast":null,"code":"var _jsxFileName = \"/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Pages/SellerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchProducts, createProduct, updateProduct, deleteProduct, fetchProductsNoID } from '../Services/productServices';\nimport ProductSort from '../Components/SortProductRate.js';\nimport '../Components/ActivityDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SellerPage = ({\n  sellerId\n}) => {\n  _s();\n  const [products, setProducts] = useState([]); // List of products for the seller\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n  const [formData, setFormData] = useState({\n    name: '',\n    sellerId: sellerId || '',\n    // Ensure sellerId is initialized correctly\n    price: '',\n    description: '',\n    stock: '',\n    rating: ''\n  }); // Form data for new or updated products\n  const [editMode, setEditMode] = useState(false); // Whether we're editing or creating\n  const [currentProductId, setCurrentProductId] = useState(null);\n  const [currentSellerId, setSellerProductId] = useState(null); // Product being edited\n\n  // Fetch products for the seller when the component loads\n  useEffect(() => {\n    const getSellerProducts = async () => {\n      try {\n        const productsData = await fetchProductsNoID(); // Fetch products based on sellerId\n        console.log(\"productsData\", productsData);\n        setProducts(productsData.data); // Set products fetched\n      } catch (err) {\n        setError('Failed to fetch products.');\n        console.error(err);\n      } finally {\n        setLoading(false); // Stop loading\n      }\n    };\n    getSellerProducts();\n  }, [sellerId]);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission to create or update a product\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate required fields\n    if (!formData.name || !formData.price || !formData.stock || !formData.sellerId) {\n      setError('All fields are required.');\n      return;\n    }\n\n    // Ensure price and stock are valid numbers\n    if (isNaN(formData.price) || isNaN(formData.stock)) {\n      setError('Price and stock must be valid numbers.');\n      return;\n    }\n    try {\n      if (editMode && currentProductId && currentSellerId) {\n        // Update product if in edit mode\n        await updateProduct(formData.sellerId, currentProductId, {\n          ...formData\n        }); // Pass the productId\n        setProducts(prevProducts => prevProducts.map(prod => prod._id === currentProductId ? {\n          ...prod,\n          ...formData\n        } : prod // Update the product in state\n        ));\n      } else {\n        // Create new product\n        const newProduct = await createProduct(formData); // formData includes sellerId\n        setProducts(prevProducts => {\n          if (!Array.isArray(prevProducts)) {\n            return [newProduct]; // Handle case where prevProducts is not an array\n          }\n          return [...prevProducts, newProduct]; // Add new product to the list\n        });\n      }\n      resetForm(); // Reset the form after submit\n    } catch (err) {\n      setError('Failed to save product. Please check your input.');\n      console.error(err);\n    }\n  };\n\n  // Reset the form and toggle off edit mode\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      sellerId: sellerId || '',\n      // Reset to the correct sellerId\n      price: '',\n      description: '',\n      stock: '',\n      rating: ''\n    });\n    setEditMode(false);\n    setCurrentProductId(null);\n    setSellerProductId(null);\n  };\n\n  // Edit product\n  const handleEdit = product => {\n    setFormData({\n      name: product.name,\n      sellerId: product.sellerId || sellerId,\n      // Ensure the sellerId is included\n      price: product.price,\n      description: product.description,\n      stock: product.stock,\n      rating: product.rating\n    });\n    setEditMode(true);\n    setCurrentProductId(product._id);\n    setSellerProductId(formData.sellerId); // Store the current product ID for reference\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itinerary-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Seller Product Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: editMode ? 'Edit Product' : 'Create New Product'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"sellerId\",\n        value: formData.sellerId,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        value: formData.price,\n        onChange: handleInputChange,\n        required: true,\n        min: \"0\" // Validation for positive numbers\n        ,\n        step: \"0.01\" // Allows decimal values (e.g., 0.00, 0.01, etc.)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: formData.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"stock\",\n        value: formData.stock,\n        onChange: handleInputChange,\n        required: true,\n        min: \"0\" // Validation for positive numbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"rating\",\n        value: formData.rating,\n        onChange: handleInputChange,\n        min: \"0\",\n        max: \"5\",\n        step: \"0.1\" // Allows decimal values (e.g., 0.0, 1.5, etc.)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editMode ? 'Update Product' : 'Create Product'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: resetForm,\n        children: \"Cancel Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ProductSort, {\n        products: products,\n        setProducts: setProducts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading products...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Products List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), products.length > 0 ? products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itinerary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", product.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stock: \", product.stock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", product.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(product),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 33\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No products available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_s(SellerPage, \"oPIHwtmh5xUog5Gt1mRA0nCpObk=\");\n_c = SellerPage;\nexport default SellerPage;\nvar _c;\n$RefreshReg$(_c, \"SellerPage\");","map":{"version":3,"names":["React","useState","useEffect","fetchProducts","createProduct","updateProduct","deleteProduct","fetchProductsNoID","ProductSort","jsxDEV","_jsxDEV","SellerPage","sellerId","_s","products","setProducts","loading","setLoading","error","setError","formData","setFormData","name","price","description","stock","rating","editMode","setEditMode","currentProductId","setCurrentProductId","currentSellerId","setSellerProductId","getSellerProducts","productsData","console","log","data","err","handleInputChange","e","value","target","prevData","handleSubmit","preventDefault","isNaN","prevProducts","map","prod","_id","newProduct","Array","isArray","resetForm","handleEdit","product","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","min","step","max","onClick","length","_c","$RefreshReg$"],"sources":["/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Pages/SellerPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchProducts, createProduct, updateProduct, deleteProduct, fetchProductsNoID } from '../Services/productServices';\nimport ProductSort from '../Components/SortProductRate.js';\nimport '../Components/ActivityDisplay.css';\n\nconst SellerPage = ({ sellerId }) => {\n    const [products, setProducts] = useState([]); // List of products for the seller\n    const [loading, setLoading] = useState(true); // Loading state\n    const [error, setError] = useState(null); // Error state\n    const [formData, setFormData] = useState({\n        name: '',\n        sellerId: sellerId || '', // Ensure sellerId is initialized correctly\n        price: '',\n        description: '',\n        stock: '',\n        rating: ''\n    }); // Form data for new or updated products\n    const [editMode, setEditMode] = useState(false); // Whether we're editing or creating\n    const [currentProductId, setCurrentProductId] = useState(null); \n    const [currentSellerId, setSellerProductId] = useState(null); // Product being edited\n\n    // Fetch products for the seller when the component loads\n    useEffect(() => {\n        const getSellerProducts = async () => {\n            try {\n                const productsData = await fetchProductsNoID(); // Fetch products based on sellerId\n                console.log(\"productsData\", productsData);\n                setProducts(productsData.data); // Set products fetched\n            } catch (err) {\n                setError('Failed to fetch products.');\n                console.error(err);\n            } finally {\n                setLoading(false); // Stop loading\n            }\n        };\n\n        getSellerProducts();\n    }, [sellerId]);\n\n    // Handle form input changes\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((prevData) => ({\n            ...prevData,\n            [name]: value\n        }));\n    };\n\n    // Handle form submission to create or update a product\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Validate required fields\n        if (!formData.name || !formData.price || !formData.stock || !formData.sellerId) {\n            setError('All fields are required.');\n            return;\n        }\n\n        // Ensure price and stock are valid numbers\n        if (isNaN(formData.price) || isNaN(formData.stock)) {\n            setError('Price and stock must be valid numbers.');\n            return;\n        }\n\n        try {\n            if (editMode && currentProductId && currentSellerId) {\n                // Update product if in edit mode\n                await updateProduct(formData.sellerId, currentProductId, { ...formData }); // Pass the productId\n                setProducts((prevProducts) =>\n                    prevProducts.map((prod) =>\n                        prod._id === currentProductId ? { ...prod, ...formData } : prod // Update the product in state\n                    )\n                );\n            } else {\n                // Create new product\n                const newProduct = await createProduct(formData); // formData includes sellerId\n                setProducts((prevProducts) => {\n                    if (!Array.isArray(prevProducts)) {\n                        return [newProduct]; // Handle case where prevProducts is not an array\n                    }\n                    return [...prevProducts, newProduct]; // Add new product to the list\n                });\n            }\n            resetForm(); // Reset the form after submit\n        } catch (err) {\n            setError('Failed to save product. Please check your input.');\n            console.error(err);\n        }\n    };\n\n    // Reset the form and toggle off edit mode\n    const resetForm = () => {\n        setFormData({\n            name: '',\n            sellerId: sellerId || '', // Reset to the correct sellerId\n            price: '',\n            description: '',\n            stock: '',\n            rating: ''\n        });\n        setEditMode(false);\n        setCurrentProductId(null);\n        setSellerProductId(null)\n    };\n\n    // Edit product\n    const handleEdit = (product) => {\n        setFormData({\n            name: product.name,\n            sellerId: product.sellerId || sellerId, // Ensure the sellerId is included\n            price: product.price,\n            description: product.description,\n            stock: product.stock,\n            rating: product.rating\n        });\n        setEditMode(true);\n        setCurrentProductId(product._id);\n        setSellerProductId(formData.sellerId) // Store the current product ID for reference\n    };\n\n    \n\n    return (\n        <div className=\"itinerary-card\">\n            <h1>Seller Product Page</h1>\n            <h2>{editMode ? 'Edit Product' : 'Create New Product'}</h2>\n\n            {/* Product Form */}\n            <form onSubmit={handleSubmit}>\n            <label>Name</label>\n            <input\n                type=\"text\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                required\n            />\n            <label>ID</label>\n            <input\n                type=\"text\"\n                name=\"sellerId\"\n                value={formData.sellerId}\n                onChange={handleInputChange}\n                required\n            />\n            <label>Price</label>\n            <input\n                type=\"number\"\n                name=\"price\"\n                value={formData.price}\n                onChange={handleInputChange}\n                required\n                min=\"0\" // Validation for positive numbers\n                step=\"0.01\" // Allows decimal values (e.g., 0.00, 0.01, etc.)\n            />\n            <label>Description</label>\n            <input\n                type=\"text\"\n                name=\"description\"\n                value={formData.description}\n                onChange={handleInputChange}\n            />\n            <label>Stock</label>\n            <input\n                type=\"number\"\n                name=\"stock\"\n                value={formData.stock}\n                onChange={handleInputChange}\n                required\n                min=\"0\" // Validation for positive numbers\n            />\n            <label>Rating</label>\n            <input\n                type=\"number\"\n                name=\"rating\"\n                value={formData.rating}\n                onChange={handleInputChange}\n                min=\"0\" \n                max=\"5\"\n                step=\"0.1\" // Allows decimal values (e.g., 0.0, 1.5, etc.)\n            />\n\n            <button type=\"submit\">{editMode ? 'Update Product' : 'Create Product'}</button>\n            {editMode && <button type=\"button\" onClick={resetForm}>Cancel Edit</button>}\n        </form>\n\n            <div>\n                <ProductSort products={products} setProducts={setProducts} /> {/* Pass products for sorting */}\n            </div>\n\n            {loading ? (\n                <p>Loading products...</p>\n            ) : error ? (\n                <p>{error}</p>\n            ) : (\n                <div>\n                    <h2>Products List</h2>\n                    {products.length > 0 ? (\n                        products.map((product) => (\n                            <div key={product._id} className=\"itinerary-card\">\n                                <h3>{product.name}</h3>\n                                <p>Price: {product.price}</p>\n                                <p>Description: {product.description}</p>\n                                <p>Stock: {product.stock}</p>\n                                <p>Rating: {product.rating}</p>\n                                <button onClick={() => handleEdit(product)}>Edit</button>\n                            </div>\n                        ))\n                    ) : (\n                        <p>No products available.</p>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SellerPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}