{"ast":null,"code":"var _jsxFileName = \"/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/CreateItineraryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createItinerary } from '../Services/itineraryServices'; // Adjust the import path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateItineraryForm = ({\n  onClose,\n  tourGuideId\n}) => {\n  _s();\n  const [newItinerary, setNewItinerary] = useState({\n    title: '',\n    description: '',\n    price: '',\n    language: '',\n    pickUpLocation: '',\n    dropOffLocation: '',\n    activities: [{\n      title: '',\n      description: '',\n      duration: '',\n      price: '',\n      startTime: '',\n      endTime: '',\n      location: {\n        lat: '',\n        lng: ''\n      }\n    }],\n    locationsToVisit: [{\n      name: '',\n      lat: '',\n      lng: '',\n      address: ''\n    }],\n    availableDates: [''],\n    availableTimes: [''],\n    accessibility: false\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewItinerary(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSaveClick = async () => {\n    // Validation: Check required fields\n    const requiredFields = [newItinerary.title, newItinerary.activities[0].title, newItinerary.activities[0].duration, newItinerary.activities[0].startTime, newItinerary.activities[0].endTime, newItinerary.activities[0].location.lat, newItinerary.activities[0].location.lng, newItinerary.language, newItinerary.pickUpLocation, newItinerary.dropOffLocation, newItinerary.availableDates[0], newItinerary.availableTimes[0]];\n    if (requiredFields.some(field => field === '' || field === undefined)) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n    try {\n      const itineraryWithTourGuideId = {\n        ...newItinerary,\n        tourGuideId: tourGuideId,\n        activities: newItinerary.activities.map(activity => ({\n          ...activity,\n          location: {\n            lat: parseFloat(activity.location.lat),\n            lng: parseFloat(activity.location.lng)\n          }\n        })),\n        locationsToVisit: newItinerary.locationsToVisit.map(location => ({\n          ...location,\n          lat: parseFloat(location.lat),\n          lng: parseFloat(location.lng)\n        }))\n      };\n      console.log(itineraryWithTourGuideId);\n      const createdItinerary = await createItinerary(itineraryWithTourGuideId);\n      console.log('Itinerary created:', createdItinerary);\n      onClose(); // Close the form after successful creation\n    } catch (err) {\n      console.error('Failed to create itinerary:', err.message);\n    }\n  };\n  const handleAddActivity = () => {\n    setNewItinerary(prevState => ({\n      ...prevState,\n      activities: [...prevState.activities, {\n        title: '',\n        description: '',\n        duration: '',\n        price: '',\n        startTime: '',\n        endTime: '',\n        location: {\n          lat: '',\n          lng: ''\n        }\n      }]\n    }));\n  };\n  const handleAddLocation = () => {\n    setNewItinerary(prevState => ({\n      ...prevState,\n      locationsToVisit: [...prevState.locationsToVisit, {\n        name: '',\n        lat: '',\n        lng: '',\n        address: ''\n      }]\n    }));\n  };\n  const handleAddAvailableDate = () => {\n    setNewItinerary(prevState => ({\n      ...prevState,\n      availableDates: [...prevState.availableDates, '']\n    }));\n  };\n  const handleAddAvailableTime = () => {\n    setNewItinerary(prevState => ({\n      ...prevState,\n      availableTimes: [...prevState.availableTimes, '']\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itinerary-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: newItinerary.title,\n      onChange: handleInputChange,\n      placeholder: \"Itinerary Title\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      value: newItinerary.description,\n      onChange: handleInputChange,\n      placeholder: \"Itinerary Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"price\",\n      value: newItinerary.price,\n      onChange: handleInputChange,\n      placeholder: \"Price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"language\",\n      value: newItinerary.language,\n      onChange: handleInputChange,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"English\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Spanish\",\n        children: \"Spanish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"French\",\n        children: \"French\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"German\",\n        children: \"German\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Chinese\",\n        children: \"Chinese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Other\",\n        children: \"Other\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"pickUpLocation\",\n      value: newItinerary.pickUpLocation,\n      onChange: handleInputChange,\n      placeholder: \"Pick Up Location\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"dropOffLocation\",\n      value: newItinerary.dropOffLocation,\n      onChange: handleInputChange,\n      placeholder: \"Drop Off Location\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itinerary-activities\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Activities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), newItinerary.activities.map((activity, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `activityTitle-${index}`,\n          value: activity.title,\n          onChange: e => {\n            const newActivities = [...newItinerary.activities];\n            newActivities[index].title = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              activities: newActivities\n            });\n          },\n          placeholder: `Activity Title`,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `activityDescription-${index}`,\n          value: activity.description,\n          onChange: e => {\n            const newActivities = [...newItinerary.activities];\n            newActivities[index].description = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              activities: newActivities\n            });\n          },\n          placeholder: `Activity Description`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: `activityDuration-${index}`,\n          value: activity.duration,\n          onChange: e => {\n            const newActivities = [...newItinerary.activities];\n            newActivities[index].duration = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              activities: newActivities\n            });\n          },\n          placeholder: \"Duration (minutes)\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: `activityPrice-${index}`,\n          value: activity.price,\n          onChange: e => {\n            const newActivities = [...newItinerary.activities];\n            newActivities[index].price = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              activities: newActivities\n            });\n          },\n          placeholder: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `activityStartTime-${index}`,\n          value: activity.startTime,\n          onChange: e => {\n            const newActivities = [...newItinerary.activities];\n            newActivities[index].startTime = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              activities: newActivities\n            });\n          },\n          placeholder: \"Start Time\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `activityEndTime-${index}`,\n          value: activity.endTime,\n          onChange: e => {\n            const newActivities = [...newItinerary.activities];\n            newActivities[index].endTime = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              activities: newActivities\n            });\n          },\n          placeholder: \"End Time\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `activityLocationLat-${index}`,\n          value: activity.location.lat,\n          onChange: e => {\n            const newActivities = [...newItinerary.activities];\n            newActivities[index].location.lat = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              activities: newActivities\n            });\n          },\n          placeholder: \"Activity Location Latitude\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `activityLocationLng-${index}`,\n          value: activity.location.lng,\n          onChange: e => {\n            const newActivities = [...newItinerary.activities];\n            newActivities[index].location.lng = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              activities: newActivities\n            });\n          },\n          placeholder: \"Activity Location Longitude\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddActivity,\n        children: \"Add Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itinerary-locations\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Locations to Visit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), newItinerary.locationsToVisit.map((location, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `locationName-${index}`,\n          value: location.name,\n          onChange: e => {\n            const newLocations = [...newItinerary.locationsToVisit];\n            newLocations[index].name = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              locationsToVisit: newLocations\n            });\n          },\n          placeholder: `Location Name`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `locationLat-${index}`,\n          value: location.lat,\n          onChange: e => {\n            const newLocations = [...newItinerary.locationsToVisit];\n            newLocations[index].lat = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              locationsToVisit: newLocations\n            });\n          },\n          placeholder: \"Location Latitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `locationLng-${index}`,\n          value: location.lng,\n          onChange: e => {\n            const newLocations = [...newItinerary.locationsToVisit];\n            newLocations[index].lng = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              locationsToVisit: newLocations\n            });\n          },\n          placeholder: \"Location Longitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `locationAddress-${index}`,\n          value: location.address,\n          onChange: e => {\n            const newLocations = [...newItinerary.locationsToVisit];\n            newLocations[index].address = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              locationsToVisit: newLocations\n            });\n          },\n          placeholder: \"Location Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddLocation,\n        children: \"Add Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itinerary-available-dates\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Dates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), newItinerary.availableDates.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => {\n            const newDates = [...newItinerary.availableDates];\n            newDates[index] = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              availableDates: newDates\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddAvailableDate,\n        children: \"Add Available Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itinerary-available-times\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), newItinerary.availableTimes.map((time, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: time,\n          onChange: e => {\n            const newTimes = [...newItinerary.availableTimes];\n            newTimes[index] = e.target.value;\n            setNewItinerary({\n              ...newItinerary,\n              availableTimes: newTimes\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddAvailableTime,\n        children: \"Add Available Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Accessibility:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: newItinerary.accessibility,\n        onChange: () => setNewItinerary(prevState => ({\n          ...prevState,\n          accessibility: !prevState.accessibility\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveClick,\n      children: \"Save Itinerary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateItineraryForm, \"XhOMed0LWW7u6vnq7GbvHIfCjUI=\");\n_c = CreateItineraryForm;\nexport default CreateItineraryForm;\nvar _c;\n$RefreshReg$(_c, \"CreateItineraryForm\");","map":{"version":3,"names":["React","useState","createItinerary","jsxDEV","_jsxDEV","CreateItineraryForm","onClose","tourGuideId","_s","newItinerary","setNewItinerary","title","description","price","language","pickUpLocation","dropOffLocation","activities","duration","startTime","endTime","location","lat","lng","locationsToVisit","name","address","availableDates","availableTimes","accessibility","handleInputChange","e","value","target","prevState","handleSaveClick","requiredFields","some","field","undefined","alert","itineraryWithTourGuideId","map","activity","parseFloat","console","log","createdItinerary","err","error","message","handleAddActivity","handleAddLocation","handleAddAvailableDate","handleAddAvailableTime","className","children","type","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","disabled","index","newActivities","onClick","newLocations","date","newDates","time","newTimes","checked","_c","$RefreshReg$"],"sources":["/Users/maranmalak/MERNSTACK/Very-good/frontendtemp/src/Components/CreateItineraryForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createItinerary } from '../Services/itineraryServices'; // Adjust the import path as needed\n\nconst CreateItineraryForm = ({ onClose, tourGuideId }) => {\n    const [newItinerary, setNewItinerary] = useState({\n        title: '',\n        description: '',\n        price: '',\n        language: '',\n        pickUpLocation: '',\n        dropOffLocation: '',\n        activities: [{ title: '', description: '', duration: '', price: '', startTime: '', endTime: '', location: { lat: '', lng: '' } }],\n        locationsToVisit: [{ name: '', lat: '', lng: '', address: '' }],\n        availableDates: [''],\n        availableTimes: [''],\n        accessibility: false,\n    });\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setNewItinerary(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    const handleSaveClick = async () => {\n        // Validation: Check required fields\n        const requiredFields = [\n            newItinerary.title,\n            newItinerary.activities[0].title,\n            newItinerary.activities[0].duration,\n            newItinerary.activities[0].startTime,\n            newItinerary.activities[0].endTime,\n            newItinerary.activities[0].location.lat,\n            newItinerary.activities[0].location.lng,\n            newItinerary.language,\n            newItinerary.pickUpLocation,\n            newItinerary.dropOffLocation,\n            newItinerary.availableDates[0],\n            newItinerary.availableTimes[0],\n        ];\n\n        if (requiredFields.some(field => field === '' || field === undefined)) {\n            alert('Please fill in all required fields.');\n            return;\n        }\n\n        try {\n            const itineraryWithTourGuideId = {\n                ...newItinerary,\n                tourGuideId: tourGuideId,\n                activities: newItinerary.activities.map(activity => ({\n                    ...activity,\n                    location: {\n                        lat: parseFloat(activity.location.lat),\n                        lng: parseFloat(activity.location.lng),\n                    },\n                })),\n                locationsToVisit: newItinerary.locationsToVisit.map(location => ({\n                    ...location,\n                    lat: parseFloat(location.lat),\n                    lng: parseFloat(location.lng),\n                })),\n            };\n            console.log(itineraryWithTourGuideId);\n            const createdItinerary = await createItinerary(itineraryWithTourGuideId);\n            console.log('Itinerary created:', createdItinerary);\n            onClose(); // Close the form after successful creation\n        } catch (err) {\n            console.error('Failed to create itinerary:', err.message);\n        }\n    };\n\n    const handleAddActivity = () => {\n        setNewItinerary(prevState => ({\n            ...prevState,\n            activities: [...prevState.activities, { title: '', description: '', duration: '', price: '', startTime: '', endTime: '', location: { lat: '', lng: '' } }],\n        }));\n    };\n\n    const handleAddLocation = () => {\n        setNewItinerary(prevState => ({\n            ...prevState,\n            locationsToVisit: [...prevState.locationsToVisit, { name: '', lat: '', lng: '', address: '' }],\n        }));\n    };\n\n    const handleAddAvailableDate = () => {\n        setNewItinerary(prevState => ({\n            ...prevState,\n            availableDates: [...prevState.availableDates, ''],\n        }));\n    };\n\n    const handleAddAvailableTime = () => {\n        setNewItinerary(prevState => ({\n            ...prevState,\n            availableTimes: [...prevState.availableTimes, ''],\n        }));\n    };\n\n    return (\n        <div className=\"itinerary-card\">\n            {/* Form fields */}\n            <input type=\"text\" name=\"title\" value={newItinerary.title} onChange={handleInputChange} placeholder=\"Itinerary Title\" required />\n            <textarea name=\"description\" value={newItinerary.description} onChange={handleInputChange} placeholder=\"Itinerary Description\" />\n            <input type=\"number\" name=\"price\" value={newItinerary.price} onChange={handleInputChange} placeholder=\"Price\" />\n            \n            {/* Language Dropdown */}\n            <select name=\"language\" value={newItinerary.language} onChange={handleInputChange} required>\n                <option value=\"\" disabled>Select Language</option>\n                <option value=\"English\">English</option>\n                <option value=\"Spanish\">Spanish</option>\n                <option value=\"French\">French</option>\n                <option value=\"German\">German</option>\n                <option value=\"Chinese\">Chinese</option>\n                <option value=\"Other\">Other</option>\n            </select>\n\n            <input type=\"text\" name=\"pickUpLocation\" value={newItinerary.pickUpLocation} onChange={handleInputChange} placeholder=\"Pick Up Location\" required />\n            <input type=\"text\" name=\"dropOffLocation\" value={newItinerary.dropOffLocation} onChange={handleInputChange} placeholder=\"Drop Off Location\" required />\n\n            {/* Activities */}\n            <div className=\"itinerary-activities\">\n                <h3>Activities</h3>\n                {newItinerary.activities.map((activity, index) => (\n                    <div key={index}>\n                        <input\n                            type=\"text\"\n                            name={`activityTitle-${index}`}\n                            value={activity.title}\n                            onChange={(e) => {\n                                const newActivities = [...newItinerary.activities];\n                                newActivities[index].title = e.target.value;\n                                setNewItinerary({ ...newItinerary, activities: newActivities });\n                            }}\n                            placeholder={`Activity Title`}\n                            required\n                        />\n                        <input\n                            type=\"text\"\n                            name={`activityDescription-${index}`}\n                            value={activity.description}\n                            onChange={(e) => {\n                                const newActivities = [...newItinerary.activities];\n                                newActivities[index].description = e.target.value;\n                                setNewItinerary({ ...newItinerary, activities: newActivities });\n                            }}\n                            placeholder={`Activity Description`}\n                        />\n                        <input\n                            type=\"number\"\n                            name={`activityDuration-${index}`}\n                            value={activity.duration}\n                            onChange={(e) => {\n                                const newActivities = [...newItinerary.activities];\n                                newActivities[index].duration = e.target.value;\n                                setNewItinerary({ ...newItinerary, activities: newActivities });\n                            }}\n                            placeholder=\"Duration (minutes)\"\n                            required\n                        />\n                        <input\n                            type=\"number\"\n                            name={`activityPrice-${index}`}\n                            value={activity.price}\n                            onChange={(e) => {\n                                const newActivities = [...newItinerary.activities];\n                                newActivities[index].price = e.target.value;\n                                setNewItinerary({ ...newItinerary, activities: newActivities });\n                            }}\n                            placeholder=\"Price\"\n                        />\n                        <input\n                            type=\"text\"\n                            name={`activityStartTime-${index}`}\n                            value={activity.startTime}\n                            onChange={(e) => {\n                                const newActivities = [...newItinerary.activities];\n                                newActivities[index].startTime = e.target.value;\n                                setNewItinerary({ ...newItinerary, activities: newActivities });\n                            }}\n                            placeholder=\"Start Time\"\n                            required\n                        />\n                        <input\n                            type=\"text\"\n                            name={`activityEndTime-${index}`}\n                            value={activity.endTime}\n                            onChange={(e) => {\n                                const newActivities = [...newItinerary.activities];\n                                newActivities[index].endTime = e.target.value;\n                                setNewItinerary({ ...newItinerary, activities: newActivities });\n                            }}\n                            placeholder=\"End Time\"\n                            required\n                        />\n                        <input\n                            type=\"text\"\n                            name={`activityLocationLat-${index}`}\n                            value={activity.location.lat}\n                            onChange={(e) => {\n                                const newActivities = [...newItinerary.activities];\n                                newActivities[index].location.lat = e.target.value;\n                                setNewItinerary({ ...newItinerary, activities: newActivities });\n                            }}\n                            placeholder=\"Activity Location Latitude\"\n                            required\n                        />\n                        <input\n                            type=\"text\"\n                            name={`activityLocationLng-${index}`}\n                            value={activity.location.lng}\n                            onChange={(e) => {\n                                const newActivities = [...newItinerary.activities];\n                                newActivities[index].location.lng = e.target.value;\n                                setNewItinerary({ ...newItinerary, activities: newActivities });\n                            }}\n                            placeholder=\"Activity Location Longitude\"\n                            required\n                        />\n                    </div>\n                ))}\n                <button onClick={handleAddActivity}>Add Activity</button>\n            </div>\n\n            {/* Locations to visit */}\n            <div className=\"itinerary-locations\">\n                <h3>Locations to Visit</h3>\n                {newItinerary.locationsToVisit.map((location, index) => (\n                    <div key={index}>\n                        <input\n                            type=\"text\"\n                            name={`locationName-${index}`}\n                            value={location.name}\n                            onChange={(e) => {\n                                const newLocations = [...newItinerary.locationsToVisit];\n                                newLocations[index].name = e.target.value;\n                                setNewItinerary({ ...newItinerary, locationsToVisit: newLocations });\n                            }}\n                            placeholder={`Location Name`}\n                        />\n                        <input\n                            type=\"text\"\n                            name={`locationLat-${index}`}\n                            value={location.lat}\n                            onChange={(e) => {\n                                const newLocations = [...newItinerary.locationsToVisit];\n                                newLocations[index].lat = e.target.value;\n                                setNewItinerary({ ...newItinerary, locationsToVisit: newLocations });\n                            }}\n                            placeholder=\"Location Latitude\"\n                        />\n                        <input\n                            type=\"text\"\n                            name={`locationLng-${index}`}\n                            value={location.lng}\n                            onChange={(e) => {\n                                const newLocations = [...newItinerary.locationsToVisit];\n                                newLocations[index].lng = e.target.value;\n                                setNewItinerary({ ...newItinerary, locationsToVisit: newLocations });\n                            }}\n                            placeholder=\"Location Longitude\"\n                        />\n                        <input\n                            type=\"text\"\n                            name={`locationAddress-${index}`}\n                            value={location.address}\n                            onChange={(e) => {\n                                const newLocations = [...newItinerary.locationsToVisit];\n                                newLocations[index].address = e.target.value;\n                                setNewItinerary({ ...newItinerary, locationsToVisit: newLocations });\n                            }}\n                            placeholder=\"Location Address\"\n                        />\n                    </div>\n                ))}\n                <button onClick={handleAddLocation}>Add Location</button>\n            </div>\n\n            {/* Available Dates */}\n            <div className=\"itinerary-available-dates\">\n                <h3>Available Dates</h3>\n                {newItinerary.availableDates.map((date, index) => (\n                    <div key={index}>\n                        <input\n                            type=\"date\"\n                            value={date}\n                            onChange={(e) => {\n                                const newDates = [...newItinerary.availableDates];\n                                newDates[index] = e.target.value;\n                                setNewItinerary({ ...newItinerary, availableDates: newDates });\n                            }}\n                        />\n                    </div>\n                ))}\n                <button onClick={handleAddAvailableDate}>Add Available Date</button>\n            </div>\n\n            {/* Available Times */}\n            <div className=\"itinerary-available-times\">\n                <h3>Available Times</h3>\n                {newItinerary.availableTimes.map((time, index) => (\n                    <div key={index}>\n                        <input\n                            type=\"time\"\n                            value={time}\n                            onChange={(e) => {\n                                const newTimes = [...newItinerary.availableTimes];\n                                newTimes[index] = e.target.value;\n                                setNewItinerary({ ...newItinerary, availableTimes: newTimes });\n                            }}\n                        />\n                    </div>\n                ))}\n                <button onClick={handleAddAvailableTime}>Add Available Time</button>\n            </div>\n\n            <label>\n                Accessibility:\n                <input\n                    type=\"checkbox\"\n                    checked={newItinerary.accessibility}\n                    onChange={() => setNewItinerary(prevState => ({ ...prevState, accessibility: !prevState.accessibility }))}\n                />\n            </label>\n\n            <button onClick={handleSaveClick}>Save Itinerary</button>\n        </div>\n    );\n};\n\nexport default CreateItineraryForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}